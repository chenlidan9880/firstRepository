{"remainingRequest":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js!D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaE\\javaeceshi\\personal-heath-view\\src\\views\\user\\Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\src\\views\\user\\Search.vue","mtime":1735264835915},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8g5a+85YWldGltZUFnb+WHveaVsO+8jOeUqOS6juaXtumXtOagvOW8j+WMlgppbXBvcnQgeyB0aW1lQWdvIH0gZnJvbSAnQC91dGlscy9kYXRhJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICAvLyDliJ3lp4vljJbnu4Tku7bnmoTmlbDmja7lsZ7mgKcKICAgIHJldHVybiB7CiAgICAgIGtleVdvcmQ6ICcnLAogICAgICAvLyDlrZjlgqjmkJzntKLlhbPplK7or40KICAgICAgbmV3c0RhdGE6IFtdLAogICAgICAvLyDlrZjlgqjmlrDpl7vmlbDmja7nmoTmlbDnu4QKICAgICAgdG90YWw6IDAgLy8g5a2Y5YKo5paw6Ze75oC75pWwCgogICAgfTsKICB9LAoKICBjcmVhdGVkKCkgewogICAgLy8g57uE5Lu25Yib5bu65ZCO6LCD55So55qE5pa55rOVCiAgICB0aGlzLmtleVdvcmRQYXJzZSgpOyAvLyDop6PmnpDmkJzntKLlhbPplK7or40KCiAgICB0aGlzLmtleUxpc3RlbmVyKCk7IC8vIOW8gOWni+ebkeWQrOaQnOe0ouWFs+mUruivjeeahOWPmOWMlgogIH0sCgogIG1ldGhvZHM6IHsKICAgIC8vIOeCueWHu+aWsOmXu+mhueaXtuiwg+eUqOeahOaWueazle+8jOWtmOWCqOaWsOmXu+S/oeaBr+W5tui3s+i9rOWIsOaWsOmXu+ivpuaDhemhtQogICAgbmV3c0l0ZW1DbGljayhuZXdzKSB7CiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ25ld3NJbmZvJywgSlNPTi5zdHJpbmdpZnkobmV3cykpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL25ld3MtZGV0YWlsJyk7CiAgICB9LAoKICAgIC8vIOagvOW8j+WMluaXtumXtOaYvuekugogICAgcGFyc2VUaW1lKHRpbWUpIHsKICAgICAgcmV0dXJuIHRpbWVBZ28odGltZSk7CiAgICB9LAoKICAgIC8vIOeCueWHu+aWsOmXu+WQjeensOaXtuiwg+eUqOeahOaWueazle+8jOS4jm5ld3NJdGVtQ2xpY2vnm7jlkIwKICAgIG5hbWVDbGljayhuZXdzKSB7CiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ25ld3NJbmZvJywgSlNPTi5zdHJpbmdpZnkobmV3cykpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaChgL25ld3MtZGV0YWlsYCk7CiAgICB9LAoKICAgIC8vIOino+aekOW5tuiOt+WPluaQnOe0ouWFs+mUruivje+8jOeEtuWQjuiOt+WPluaWsOmXu+aVsOaNrgogICAga2V5V29yZFBhcnNlKCkgewogICAgICB0aGlzLmtleVdvcmQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdrZXlXb3JkJyk7CiAgICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgICB9LAoKICAgIC8vIOiuvue9ruS4gOS4quWumuaXtuWZqO+8jOWumuacn+ajgOafpeaQnOe0ouWFs+mUruivjeaYr+WQpuWPmOWMlu+8jOWmguaenOacieWPmOWMluWImemHjeaWsOiOt+WPluaWsOmXu+aVsOaNrgogICAga2V5TGlzdGVuZXIoKSB7CiAgICAgIHNldEludGVydmFsKCgpID0+IHsKICAgICAgICBjb25zdCBrZXkgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdrZXlXb3JkJyk7CgogICAgICAgIGlmIChrZXkgPT09IHRoaXMua2V5V29yZCkgewogICAgICAgICAgcmV0dXJuOyAvLyDlpoLmnpzlhbPplK7or43msqHmnInlj5jljJbvvIzkuI3lgZrku7vkvZXmk43kvZwKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5rZXlXb3JkID0ga2V5OyAvLyDmm7TmlrDlhbPplK7or40KCiAgICAgICAgICB0aGlzLmZldGNoRGF0YSgpOyAvLyDph43mlrDojrflj5bmlrDpl7vmlbDmja4KICAgICAgICB9CiAgICAgIH0sIDEwMCk7IC8vIOavjzEwMOavq+enkuajgOafpeS4gOasoQogICAgfSwKCiAgICAvLyDlvILmraXojrflj5bmlrDpl7vmlbDmja7nmoTmlrnms5UKICAgIGFzeW5jIGZldGNoRGF0YSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBuZXdzUXVlcnlEdG8gPSB7CiAgICAgICAgICBuYW1lOiB0aGlzLmtleVdvcmQKICAgICAgICB9OyAvLyDliJvlu7rkuIDkuKrljIXlkKvmkJzntKLlhbPplK7or43nmoTmlbDmja7kvKDovpPlr7nosaEKCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRheGlvcy5wb3N0KGAvbmV3cy9xdWVyeWAsIG5ld3NRdWVyeUR0byk7IC8vIOWPkemAgVBPU1Tor7fmsYLojrflj5bmlrDpl7vmlbDmja4KCiAgICAgICAgY29uc3QgewogICAgICAgICAgZGF0YQogICAgICAgIH0gPSByZXNwb25zZTsgLy8g6Kej5p6E5ZON5bqU5pWw5o2uCgogICAgICAgIHRoaXMubmV3c0RhdGEgPSBkYXRhLmRhdGE7IC8vIOabtOaWsOaWsOmXu+aVsOaNruaVsOe7hAoKICAgICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbDsgLy8g5pu05paw5paw6Ze75oC75pWwCiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGDmkJzntKLotYTorq/liJfooajliqDovb3lvILluLjvvJoke2V9YCk7IC8vIOWmguaenOWPkeeUn+mUmeivr++8jOaJk+WNsOmUmeivr+S/oeaBrwogICAgICB9CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA,SAAA,OAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,GAAA;AACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AACA;AACA,MAAA,QAAA,EAAA,EAFA;AAEA;AACA,MAAA,KAAA,EAAA,CAHA,CAGA;;AAHA,KAAA;AAKA,GARA;;AASA,EAAA,OAAA,GAAA;AACA;AACA,SAAA,YAAA,GAFA,CAEA;;AACA,SAAA,WAAA,GAHA,CAGA;AACA,GAbA;;AAcA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAAA,CAAA,IAAA,EAAA;AACA,MAAA,cAAA,CAAA,OAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AACA,KALA;;AAMA;AACA,IAAA,SAAA,CAAA,IAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,KATA;;AAUA;AACA,IAAA,SAAA,CAAA,IAAA,EAAA;AACA,MAAA,cAAA,CAAA,OAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AACA,KAdA;;AAeA;AACA,IAAA,YAAA,GAAA;AACA,WAAA,OAAA,GAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA;AACA,WAAA,SAAA;AACA,KAnBA;;AAoBA;AACA,IAAA,WAAA,GAAA;AACA,MAAA,WAAA,CAAA,MAAA;AACA,cAAA,GAAA,GAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA;;AACA,YAAA,GAAA,KAAA,KAAA,OAAA,EAAA;AACA,iBADA,CACA;AACA,SAFA,MAEA;AACA,eAAA,OAAA,GAAA,GAAA,CADA,CACA;;AACA,eAAA,SAAA,GAFA,CAEA;AACA;AACA,OARA,EAQA,GARA,CAAA,CADA,CASA;AACA,KA/BA;;AAgCA;AACA,UAAA,SAAA,GAAA;AACA,UAAA;AACA,cAAA,YAAA,GAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA,CADA,CACA;;AACA,cAAA,QAAA,GAAA,MAAA,KAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA,YAAA,CAAA,CAFA,CAEA;;AACA,cAAA;AAAA,UAAA;AAAA,YAAA,QAAA,CAHA,CAGA;;AACA,aAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAJA,CAIA;;AACA,aAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CALA,CAKA;AACA,OANA,CAMA,OAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,cAAA,CAAA,EAAA,EADA,CACA;AACA;AACA;;AA3CA;AAdA,CAAA","sourcesContent":["以下是您提供的Vue组件代码的注释：\r\n\r\n```html\r\n<template>\r\n    <!-- 使用Element UI的el-row和el-col来创建一个栅格布局 -->\r\n    <el-row style=\"margin-top: 20px;\">\r\n        <!-- 遍历newsData数组，为每条新闻创建一个点击区域 -->\r\n        <el-col @click.native=\"newsItemClick(news)\" :span=\"4\" :key=\"index\" v-for=\"(news, index) in newsData\">\r\n            <div style=\"padding: 0 10px;\">\r\n                <!-- 显示新闻封面图片 -->\r\n                <img :src=\"news.cover\" :alt=\"news.name\" style=\"width: 100%;height: 118px;border-radius: 5px;\">\r\n                <!-- 显示新闻标题 -->\r\n                <h3 class=\"news-title\">{{ news.name }}</h3>\r\n                <!-- 显示新闻标签和创建时间 -->\r\n                <div style=\"font-size: 12px;\">\r\n                    <span class=\"news-tags\">{{ news.tagName }}</span>\r\n                    <span style=\"margin-left: 10px;\">收藏于 {{ parseTime(news.createTime) }}</span>\r\n                </div>\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\n// 导入timeAgo函数，用于时间格式化\r\nimport { timeAgo } from '@/utils/data'\r\n\r\nexport default {\r\n    data() {\r\n        // 初始化组件的数据属性\r\n        return {\r\n            keyWord: '', // 存储搜索关键词\r\n            newsData: [], // 存储新闻数据的数组\r\n            total: 0 // 存储新闻总数\r\n        };\r\n    },\r\n    created() {\r\n        // 组件创建后调用的方法\r\n        this.keyWordParse(); // 解析搜索关键词\r\n        this.keyListener(); // 开始监听搜索关键词的变化\r\n    },\r\n    methods: {\r\n        // 点击新闻项时调用的方法，存储新闻信息并跳转到新闻详情页\r\n        newsItemClick(news) {\r\n            sessionStorage.setItem('newsInfo', JSON.stringify(news));\r\n            this.$router.push('/news-detail');\r\n        },\r\n        // 格式化时间显示\r\n        parseTime(time) {\r\n            return timeAgo(time);\r\n        },\r\n        // 点击新闻名称时调用的方法，与newsItemClick相同\r\n        nameClick(news) {\r\n            sessionStorage.setItem('newsInfo', JSON.stringify(news));\r\n            this.$router.push(`/news-detail`);\r\n        },\r\n        // 解析并获取搜索关键词，然后获取新闻数据\r\n        keyWordParse() {\r\n            this.keyWord = sessionStorage.getItem('keyWord');\r\n            this.fetchData();\r\n        },\r\n        // 设置一个定时器，定期检查搜索关键词是否变化，如果有变化则重新获取新闻数据\r\n        keyListener() {\r\n            setInterval(() => {\r\n                const key = sessionStorage.getItem('keyWord');\r\n                if (key === this.keyWord) {\r\n                    return; // 如果关键词没有变化，不做任何操作\r\n                } else {\r\n                    this.keyWord = key; // 更新关键词\r\n                    this.fetchData(); // 重新获取新闻数据\r\n                }\r\n            }, 100); // 每100毫秒检查一次\r\n        },\r\n        // 异步获取新闻数据的方法\r\n        async fetchData() {\r\n            try {\r\n                const newsQueryDto = { name: this.keyWord } // 创建一个包含搜索关键词的数据传输对象\r\n                const response = await this.$axios.post(`/news/query`, newsQueryDto); // 发送POST请求获取新闻数据\r\n                const { data } = response; // 解构响应数据\r\n                this.newsData = data.data; // 更新新闻数据数组\r\n                this.total = data.total; // 更新新闻总数\r\n            } catch (e) {\r\n                console.error(`搜索资讯列表加载异常：${e}`); // 如果发生错误，打印错误信息\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n/* 为新闻标签设置样式 */\r\n.news-tags {\r\n    display: inline-block;\r\n    padding: 2px 5px;\r\n    background-color: rgb(222, 243, 251);\r\n    color: #1d3cc4;\r\n    border-radius: 3px;\r\n}\r\n\r\n/* 为新闻标题设置样式 */\r\n.news-title {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis; // 显示省略符号来代表被修剪的文本\r\n    white-space: nowrap; // 文本不换行\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views/user"}]}