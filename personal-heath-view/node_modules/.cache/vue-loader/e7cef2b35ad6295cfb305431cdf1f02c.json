{"remainingRequest":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaE\\javaeceshi\\personal-heath-view\\src\\views\\user\\Search.vue?vue&type=style&index=0&id=0964933c&scoped=true&lang=scss&","dependencies":[{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\src\\views\\user\\Search.vue","mtime":1735264835915},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaE\\javaeceshi\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8qIOS4uuaWsOmXu+agh+etvuiuvue9ruagt+W8jyAqLw0KLm5ld3MtdGFncyB7DQogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgIHBhZGRpbmc6IDJweCA1cHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMiwgMjQzLCAyNTEpOw0KICAgIGNvbG9yOiAjMWQzY2M0Ow0KICAgIGJvcmRlci1yYWRpdXM6IDNweDsNCn0NCg0KLyog5Li65paw6Ze75qCH6aKY6K6+572u5qC35byPICovDQoubmV3cy10aXRsZSB7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgLy8g5pi+56S655yB55Wl56ym5Y+35p2l5Luj6KGo6KKr5L+u5Ymq55qE5paH5pysDQogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgLy8g5paH5pys5LiN5o2i6KGMDQp9DQo="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views/user","sourcesContent":["以下是您提供的Vue组件代码的注释：\r\n\r\n```html\r\n<template>\r\n    <!-- 使用Element UI的el-row和el-col来创建一个栅格布局 -->\r\n    <el-row style=\"margin-top: 20px;\">\r\n        <!-- 遍历newsData数组，为每条新闻创建一个点击区域 -->\r\n        <el-col @click.native=\"newsItemClick(news)\" :span=\"4\" :key=\"index\" v-for=\"(news, index) in newsData\">\r\n            <div style=\"padding: 0 10px;\">\r\n                <!-- 显示新闻封面图片 -->\r\n                <img :src=\"news.cover\" :alt=\"news.name\" style=\"width: 100%;height: 118px;border-radius: 5px;\">\r\n                <!-- 显示新闻标题 -->\r\n                <h3 class=\"news-title\">{{ news.name }}</h3>\r\n                <!-- 显示新闻标签和创建时间 -->\r\n                <div style=\"font-size: 12px;\">\r\n                    <span class=\"news-tags\">{{ news.tagName }}</span>\r\n                    <span style=\"margin-left: 10px;\">收藏于 {{ parseTime(news.createTime) }}</span>\r\n                </div>\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\n// 导入timeAgo函数，用于时间格式化\r\nimport { timeAgo } from '@/utils/data'\r\n\r\nexport default {\r\n    data() {\r\n        // 初始化组件的数据属性\r\n        return {\r\n            keyWord: '', // 存储搜索关键词\r\n            newsData: [], // 存储新闻数据的数组\r\n            total: 0 // 存储新闻总数\r\n        };\r\n    },\r\n    created() {\r\n        // 组件创建后调用的方法\r\n        this.keyWordParse(); // 解析搜索关键词\r\n        this.keyListener(); // 开始监听搜索关键词的变化\r\n    },\r\n    methods: {\r\n        // 点击新闻项时调用的方法，存储新闻信息并跳转到新闻详情页\r\n        newsItemClick(news) {\r\n            sessionStorage.setItem('newsInfo', JSON.stringify(news));\r\n            this.$router.push('/news-detail');\r\n        },\r\n        // 格式化时间显示\r\n        parseTime(time) {\r\n            return timeAgo(time);\r\n        },\r\n        // 点击新闻名称时调用的方法，与newsItemClick相同\r\n        nameClick(news) {\r\n            sessionStorage.setItem('newsInfo', JSON.stringify(news));\r\n            this.$router.push(`/news-detail`);\r\n        },\r\n        // 解析并获取搜索关键词，然后获取新闻数据\r\n        keyWordParse() {\r\n            this.keyWord = sessionStorage.getItem('keyWord');\r\n            this.fetchData();\r\n        },\r\n        // 设置一个定时器，定期检查搜索关键词是否变化，如果有变化则重新获取新闻数据\r\n        keyListener() {\r\n            setInterval(() => {\r\n                const key = sessionStorage.getItem('keyWord');\r\n                if (key === this.keyWord) {\r\n                    return; // 如果关键词没有变化，不做任何操作\r\n                } else {\r\n                    this.keyWord = key; // 更新关键词\r\n                    this.fetchData(); // 重新获取新闻数据\r\n                }\r\n            }, 100); // 每100毫秒检查一次\r\n        },\r\n        // 异步获取新闻数据的方法\r\n        async fetchData() {\r\n            try {\r\n                const newsQueryDto = { name: this.keyWord } // 创建一个包含搜索关键词的数据传输对象\r\n                const response = await this.$axios.post(`/news/query`, newsQueryDto); // 发送POST请求获取新闻数据\r\n                const { data } = response; // 解构响应数据\r\n                this.newsData = data.data; // 更新新闻数据数组\r\n                this.total = data.total; // 更新新闻总数\r\n            } catch (e) {\r\n                console.error(`搜索资讯列表加载异常：${e}`); // 如果发生错误，打印错误信息\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n/* 为新闻标签设置样式 */\r\n.news-tags {\r\n    display: inline-block;\r\n    padding: 2px 5px;\r\n    background-color: rgb(222, 243, 251);\r\n    color: #1d3cc4;\r\n    border-radius: 3px;\r\n}\r\n\r\n/* 为新闻标题设置样式 */\r\n.news-title {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis; // 显示省略符号来代表被修剪的文本\r\n    white-space: nowrap; // 文本不换行\r\n}\r\n</style>\r\n\r\n\r\n\r\n"]}]}